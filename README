
# ðŸ§¾ Billing System

A robust billing system built using modern Python technologies with a clean architecture approach (DDD + CQRS). This project is designed to be modular, scalable, and production-ready.

---

## ðŸ“¦ Tech Stack

- **FastAPI** â€“ Backend Framework
- **PostgreSQL** â€“ Relational Database
- **Docker + Docker Compose** â€“ Containerization
- **Pydantic** â€“ Data validation and settings management
- **SQLAlchemy + Alembic** â€“ ORM and migrations
- **Celery + RabbitMQ** â€“ Background task processing
- **SendGrid** â€“ Email service integration
- **Multithreading** â€“ Non-blocking operations
- **CQRS + DDD** â€“ Code architecture and separation of concerns
- **JWT** â€“ Authentication and Authorization
- **Plotly** â€“ Interactive dashboards
- **GitLab CI/CD** â€“ Continuous Integration and Deployment
- **pytest + httpx** â€“ Testing suite

---

## ðŸ§± Project Structure (based on DDD + CQRS)

billing_system/
â”œâ”€â”€ app/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ main.py               # Punto de entrada FastAPI
â”‚   â”œâ”€â”€ core/                 # Configuraciones generales (db, seguridad, etc.)
â”‚   â”œâ”€â”€ api/                  # Rutas y controladores
â”‚   â”œâ”€â”€ domain/               # Entidades y lÃ³gica del dominio
â”‚   â”œâ”€â”€ infrastructure/       # DB, servicios externos (SendGrid, Celery)
â”‚   â”œâ”€â”€ application/          # Casos de uso
â”‚   â””â”€â”€ shared/               # Utilidades compartidas
â”œâ”€â”€ tests/
â”œâ”€â”€ alembic/                  # Migraciones
â”œâ”€â”€ docker-compose.yml
â”œâ”€â”€ Dockerfile
â”œâ”€â”€ .env
â””â”€â”€ requirements.txt


## ðŸš€ Getting Started

### ðŸ”§ Prerequisites
- Python 3.10+
- Docker & Docker Compose

### ðŸ›  Setup

```bash
# Clone the repo
git clone nothing yet lol
cd billing_system

# Create virtual environment
python -m venv venv
source venv/bin/activate  # or venv\Scripts\activate on Windows

# Install dependencies
pip install -r requirements.txt

# Start FastAPI server
uvicorn app.main:app --reload

# Docker Compose
docker-compose up --build
or
docker-compose up if you have not made any changes to your Dockerfile

http://localhost:8000/
```
